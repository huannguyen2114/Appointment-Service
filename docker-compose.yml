version: '3.8'

services:
  db:
    image: postgres:latest # Use the latest official PostgreSQL image
    container_name: postgres_db
    restart: always # Keep the container running unless stopped
    environment:
      POSTGRES_USER: myuser # Replace with your desired username
      POSTGRES_PASSWORD: mypassword # Replace with your desired password
      POSTGRES_DB: appointment_db # Replace with your desired database name
    ports:
      - "5444:5432" # Map host port 5432 to container port 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist data using a named volume

  app: # Add the new service for your Spring Boot application
    build: . # Build the image from the Dockerfile in the current directory
    container_name: appointment_app
    ports:
      - "8080:8080" # Map host port 8080 to container port 8080
    environment:
      # Pass database connection details as environment variables
      # These should match the values expected by your application.yml
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/appointment_db # Use the service name 'db' as the host
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: mypassword
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate # Or 'update'/'none' depending on your Liquibase setup
      SPRING_LIQUIBASE_ENABLED: false # Ensure Liquibase runs
    depends_on:
      - db # Ensure the 'db' service starts before the 'app' service
volumes:
  postgres_data: # Define the named volume